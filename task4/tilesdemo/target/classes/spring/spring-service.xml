<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd ">
    <!-- 扫描service包下所有使用注解的类型 -->
    <context:component-scan base-package="pers.hdh.service" />

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 配置基于注解的声明式事务
        默认使用主角额来管理事务行为
     -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- 配置memcache -->
    <bean id="xMemcachedClientBuilder" class="net.rubyeye.xmemcached.XMemcachedClientBuilder">
        <constructor-arg>
            <bean class="java.net.InetSocketAddress" >
                <constructor-arg>
                    <value>127.0.0.1</value>
                </constructor-arg>
                <constructor-arg>
                    <value>11211</value>
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>
    <bean name="memcachedClient" factory-bean="xMemcachedClientBuilder"
          factory-method="build" destroy-method="shutdown">
    </bean>

    <!-- 配置jedis -->
    <!-- jedis连接池配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大连接数 -->
        <property name="maxTotal" value="30" />
        <!-- 最大空闲连接数 -->
        <property name="maxIdle" value="10" />
        <!-- 每次释放连接的最大数目 -->
        <property name="numTestsPerEvictionRun" value="1024" />
        <!-- 释放连接的扫描间隔（毫秒） -->
        <property name="timeBetweenEvictionRunsMillis" value="30000" />
        <!-- 连接最小空闲时间 -->
        <property name="minEvictableIdleTimeMillis" value="1800000" />
        <!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
        <property name="softMinEvictableIdleTimeMillis" value="10000" />
        <!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
        <property name="maxWaitMillis" value="1500" />
        <!-- 在获取连接的时候检查有效性, 默认false -->
        <property name="testOnBorrow" value="true" />
        <!-- 在空闲时检查有效性, 默认false -->
        <property name="testWhileIdle" value="true" />
        <!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
        <property name="blockWhenExhausted" value="false" />
    </bean>

    <!-- redis单机 通过连接池 -->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="close">
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
        <constructor-arg name="host" value="192.168.238.128"/>
        <constructor-arg name="port" value="6379"/>
    </bean>

    <!-- email -->
    <bean id="email" class="pers.hdh.model.Email">
        <property name="url" value="http://sendcloud.sohu.com/webapi/mail.send.json" />
        <property name="apiUser" value="hdonghong_test_AZbWq1" />
        <property name="apiKey" value="YXqa0ESVVG8T8ayT" />
        <property name="rcpt_to" value="799108252@qq.com" />
        <property name="from" value="sendcloud@sendcloud.im" />
        <property name="fromname" value="hdonghong" />
        <property name="subject" value="来自 H DongHong 的邮件" />
        <property name="resp_email_id" value="true" />
    </bean>

</beans>